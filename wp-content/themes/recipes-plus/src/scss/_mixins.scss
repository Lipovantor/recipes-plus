@mixin placeholder {
  &::-webkit-input-placeholder {
    @content
  }
  &:-moz-placeholder {
    @content
  }
  &::-moz-placeholder {
    @content
  }
  &:-ms-input-placeholder {
    @content
  }
  &::placeholder {
    @content
  }
}

$breakpoints-custom: (
        xs: 576px,
        sm: 767px,
        md: 991px,
        lg: 1199px,
        xl: 1440px,
        hd: 2000px,
);

$breakpoints-min: (
		xs: 577px,
		sm: 768px,
		md: 992px,
		lg: 1200px,
		xl: 1441px,
		hd: 2001px,
);

@mixin media($breakpoint) {
    @if map-has-key($breakpoints-custom, $breakpoint) {
        @media (max-width: #{map-get($breakpoints-custom, $breakpoint)}) {
            @content;
        }
    } @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints-custom` map.";
    }
}

@mixin media_min($breakpoint) {
    @if map-has-key($breakpoints-min, $breakpoint) {
        @media (min-width: #{map-get($breakpoints-min, $breakpoint)}) {
            @content;
        }
    } @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints-custom` map.";
    }
}


@mixin media_range($breakpoint, $breakpoint2) {
    @if map-has-key($breakpoints-custom, $breakpoint) {
        @media (max-width: #{map-get($breakpoints-custom, $breakpoint2)}) and (min-width: #{map-get($breakpoints-custom, $breakpoint)}) {
            @content;
        }
    } @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints-custom` map.";
    }
}

%animated {
  @include media_min(sm) {
    transition: all .3s ease;
  }
}
